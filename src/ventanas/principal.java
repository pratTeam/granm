/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * principal.java
 *
 * Created on 07-06-2013, 09:53:55 AM
 */
package ventanas;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.GridLayout;
import java.awt.List;
import java.awt.Toolkit;
import java.util.ArrayList;
import java.util.Iterator;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;

/**
 *
 * @author TCA_LC417_PC01
 */
public class principal extends javax.swing.JFrame {
    public nuevo n;
    public boolean maximizar = false;
    public boolean primeroFlag = true;
    public String FO = null;
    public int numVar = 0;
    public int numColumnas = 0;
    public String[] restricciones = null;
    public String[] operadores= null;
    public String[] ld = null;
    public ArrayList<Integer> Ss = new ArrayList<Integer>();
    public ArrayList<Integer> As = new ArrayList<Integer>();
    public ArrayList<Integer> es = new ArrayList<Integer>();

    /** Creates new form principal */
    public principal() {
        //Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        initComponents();
        //setBounds(((screenSize.width/2)-(this.getSize().width/2)), ((screenSize.height/2)-(this.getSize().height/2))-20,
        //        this.getSize().width, this.getSize().height);
        setLocationRelativeTo(null);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        panelMatris = new javax.swing.JPanel();
        btnFinalizar = new javax.swing.JButton();
        btnSiguiente = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Awesome Business Software");
        setPreferredSize(new java.awt.Dimension(1000, 580));
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jButton1.setText("Nuevo");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout panelMatrisLayout = new javax.swing.GroupLayout(panelMatris);
        panelMatris.setLayout(panelMatrisLayout);
        panelMatrisLayout.setHorizontalGroup(
            panelMatrisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 725, Short.MAX_VALUE)
        );
        panelMatrisLayout.setVerticalGroup(
            panelMatrisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 303, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(panelMatris);

        btnFinalizar.setText("Finalizar");

        btnSiguiente.setText("Siguiente paso");

        jMenu1.setText("Archivo");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Nuevo");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Ayuda");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnSiguiente)
                        .addGap(18, 18, 18)
                        .addComponent(btnFinalizar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 277, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFinalizar)
                    .addComponent(btnSiguiente))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    abrirNuevo();
}//GEN-LAST:event_jButton1ActionPerformed

private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
    abrirNuevo();
}//GEN-LAST:event_jMenuItem1ActionPerformed

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        if (n != null && primeroFlag) {
            if(n.isComplete()){
                maximizar = n.isMax();
                FO = n.getFO();
                numVar = n.getNumVariables();
                restricciones = n.getRestricciones();
                operadores = n.getOperadores();
                ld = n.getLds();
                
                primeroFlag = false;
                ArrayList<Integer> A = new ArrayList<Integer>();
                
                A = igualarRestricciones();
                modificarFO(A);
                restriccionesPorM(A);
                
                String m = "FO: "+FO+"\nS/A:\n";
                for(int i=0; i<restricciones.length; i++){
                    m = m + restricciones[i]+" = "+ld[i]+"\n";
                }                
                cargarTabla();
                //JOptionPane.showMessageDialog(this, m);
            }
        }
    }//GEN-LAST:event_formWindowGainedFocus

    public ArrayList<Integer> igualarRestricciones(){
        ArrayList<Integer> enviar = new ArrayList<Integer>();
        
        for(int i=0; i<operadores.length; i++){
            switch(operadores[i]){
                case "≤":
                    restricciones[i] = restricciones[i]+"+S"+(i+1);
                    Ss.add(i+1);
                    if(numColumnas < (numVar+1))
                        numColumnas = (numVar+1);
                    break;
                case "≥":
                    restricciones[i] = restricciones[i]+"-e"+(i+1)+"+A"+(i+1);
                    es.add(i+1);
                    As.add(i+1);
                    if(numColumnas < (numVar+2))
                        numColumnas = (numVar+2);
                    enviar.add((i+1));
                    break;
                case "=":
                    restricciones[i] = restricciones[i]+"+A"+(i+1);
                    As.add(i+1);
                    if(numColumnas < (numVar+1))
                        numColumnas = (numVar+1);
                    enviar.add((i+1));
                    break;
                default:
                    break;
            }
        }
        
        return enviar;
    }
    
    public void modificarFO(ArrayList<Integer> A){
        Iterator iter = A.iterator();
        while (iter.hasNext())
            FO = FO+"+MA"+iter.next();
    }
    
    public void restriccionesPorM(ArrayList<Integer> A){
        String nuevo;
        int aux;
        
        Iterator iter = A.iterator();
        while (iter.hasNext()){
            nuevo = "";
            aux = Integer.valueOf(iter.next().toString())-1;
            
            for(int i=0; i < restricciones[aux].length(); i++){
                if(restricciones[aux].charAt(i) == 'x' || restricciones[aux].charAt(i) == 'A' ||
                        restricciones[aux].charAt(i) == 'e'){
                    nuevo = nuevo + "M" + restricciones[aux].charAt(i);
                }
                else{
                    nuevo = nuevo + restricciones[aux].charAt(i);
                }            
            }
            restricciones[aux] = nuevo;
            ld[aux] = ld[aux]+"M";
        }
    }
    
    private void cargarTabla(){
        int numFilas = restricciones.length+2;
        int numCols = getNumColumnas();
        int contLabel= 0;
        
        JLabel[] label = new JLabel[numCols];
        
        for(int i=0; i<numCols; i++){
            label[i] = new JLabel("");
            label[i].setFont(new Font("", Font.BOLD, 14));
        }
        
        panelMatris.setLayout(new GridLayout(numFilas, numCols));
        
        label[0].setText("R");
        contLabel++;
        panelMatris.add(label[0]);
        label[1].setText("V");
        contLabel++;
        panelMatris.add(label[1]);
        label[2].setText("Z");
        contLabel++;
        panelMatris.add(label[2]);
        
        for(int i=0; i<numVar; i++){
            label[i+3].setText("X"+(i+1));
            panelMatris.add(label[i+3]);
            contLabel++;
        }
        
        Iterator iter = As.iterator();
        while (iter.hasNext()){
            label[contLabel].setText("A"+iter.next());
            panelMatris.add(label[contLabel]);
            contLabel++;
        }
        
        iter = es.iterator();
        while (iter.hasNext()){
            label[contLabel].setText("e"+iter.next());
            panelMatris.add(label[contLabel]);
            contLabel++;
        }
        
        iter = Ss.iterator();
        while (iter.hasNext()){
            label[contLabel].setText("S"+iter.next());
            panelMatris.add(label[contLabel]);
            contLabel++;
        }
        
        label[contLabel].setText("LD");
        panelMatris.add(label[contLabel]);
        
        panelMatris.updateUI();

        for (int i=0; i<(numFilas-1); i++){
            for(int k=0; k<numCols; k++){
                panelMatris.add(new JTextArea(String.valueOf(i)));
            }
        }
        /*
         Crear la matriz con datos, M = 10000000
         */
        
        System.out.println("numCols: " + numCols);
        System.out.println("numFilas: " + numFilas);
    }
    
    private int getNumColumnas(){
        int enviar = 0;
        
        Iterator iter = As.iterator();
        while (iter.hasNext()){
            iter.next();
            enviar++;
        }
        
        iter = es.iterator();
        while (iter.hasNext()){
            iter.next();
            enviar++;
        }
        
        iter = Ss.iterator();
        while (iter.hasNext()){
            iter.next();
            enviar++;
        }
        enviar = enviar + numVar;
        
        //R, V, Z, ld
        enviar = enviar + 4;
        
        return enviar;
    }
    
public void abrirNuevo(){
    primeroFlag = true;
    n = new nuevo();
    n.setVisible(true);
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new principal().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFinalizar;
    private javax.swing.JButton btnSiguiente;
    private javax.swing.JButton jButton1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panelMatris;
    // End of variables declaration//GEN-END:variables
}
